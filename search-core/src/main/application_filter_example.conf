log {
  #show = true
  show = ${config_log_show}
}
#solr
solr {
  #staging
  #baseUrls = "http://solr1_ehsy.com:10032/solr,http://solr2.ehsy.com:10032/solr,http://solr3.ehsy.com:10032/solr"
  baseUrls = ${config_solr_baseUrls}
  #test
  # baseUrls = "http://10.168.29.126:10032/solr"
}

#kafka
kafka {

  #product
  #brokers = "solr1:9092"

  #brokers = "121.40.54.54:9092"
  #product
  # brokers = "10.251.254.136:9092"

  #brokers = "solr1.ehsy.com:9092"
  brokers = ${config_kafka_brokers}

  #staging
  # brokers = "solr1:9092"

  #test
  #brokers = "10.168.29.126:9092"


  #groupid = "group1"
  groupid = ${config_kafka_groupid}

  producter {
    #product
    #topic = "indexManagerProd"
    # product backup staging
    #topic = "indexManagerBack"

    topic = ${config_kafka_producter_topic}

    #staging
    #topic = "indexManagerStaging"

    #test
    #topic = "indexManagersTest3"
    #type = "async"
    type = ${config_kafka_producter_type}
  }
  consumer {
    # topic = "test"

    #product
    #topic = "indexManagerProd"
    #product backup staging
    #topic = "indexManagerBack"
    topic = ${config_kafka_consumer_topic}

    #staging
    #topic = "indexManagerStaging"

    #test
    #topic = "indexManagersTest3"
  }
  serializer {
    class = "kafka.serializer.StringEncoder"
  }
}

#web
monitor {
  #host = "192.168.51.118"
  #host = "solr1.ehsy.com"
  #host = ""
  host = ${config_monitor_host}
  #port = 8888
  port = ${config_monitor_port}
}


#redis
redis {
  #host = "redis"
  #host = "redis"
  #product
  #host = "10.24.153.79"
  # host = "10.24.233.186"
  host = ${config_redis_host}
  #staging
  #host = "10.47.68.223"

  #test
  # host = "10.168.29.126"
  #host = "121.40.241.26"
  #port = 6379
  port = ${config_redis_port}
}

#cache
cache {
  # unit second, cache search by url 2 hours 60*60*3
  #time = 10800
  time = ${config_cache_time}
}

#zookeeper
#product & staging
#zk = "solr1.ehsy.com:3213,solr2.ehsy.com:3213,solr3.ehsy.com:3213"
zk = ${config_zk}

#test solr 121.40.241.26:2181/solr  kafka: 121.40.241.26:2181
#zk = "10.168.29.126:2181"
#zk = "10.165.11.140:3213,10.168.29.126:3213,10.251.254.136:3213"

#zkBackUp = "10.168.29.126:2181"
#zkBackUp = "121.40.241.26:2181"
zkBackUp = ${config_zkBackUp}

#for generate xml,use field.multivalued generate String[field][separator]
field {
  #multivalued = "productPages => | &tags => ,&picUrl => |&cityId => _ &keywords => |"
  multivalued = ${config_field_multivalued}
}

filter {
  #change = "\" => \\\\\" & \\（ => \\\\（ & \\( => \\\\( & \\） => \\\\） & \\) => \\\\) & \\“ => \\\\” & \\,=>\\\\, & \\，=> \\\\，& \\:=> \\\\: & \\：=> \\\\："
  change = ${config_filter_change}
}

#save xml to disk filepath
filedir {
  #local
  #mergeclouds = "D:\\search\\datasource\\tmp\\mergeclouds\\"
  #screenclouds = "D:\\search\\datasource\\tmp\\screenclouds\\"
  #teset & product backup
  #mergeclouds = "/data/mergeclouds/"
  #screenclouds = "/data/screenclouds/"

  #product
  #mergeclouds = "/data/mergeclouds_prod/"
  #screenclouds = "/data/screenclouds_prod/"
  mergeclouds = ${config_filedir_mergeclouds}
  screenclouds = ${config_filedir_screenclouds}
  #staging
  # mergeclouds = "/data/mergeclouds_staging/"
  #screenclouds = "/data/screenclouds_staging/"


}

#solr
#collection = "mergescloud"
collection = ${config_collection}

#defaultcollection = "mergescloud"
#efaultattrcollection = "screencloud"
#defaultcollection = "mergescloud_test"
#defaultattrcollection = "screencloud_test"

#product
#defaultcollection = "mergescloud_prod"
#defaultattrcollection = "screencloud_prod"

#test and staging
#defaultcollection = "mergescloud"
defaultcollection = ${config_defaultcollection}

#defaultattrcollection = "screencloud"
defaultattrcollection = ${config_defaultattrcollection}

defaultsuggestcollection = "kwsuggest"
defaultsuggestcollection = ${config_defaultsuggestcollection}


#remote interface http
url {
  #mergeclouds = "http://192.168.50.125:8088/mergeclouds"
  # screenclouds = "http://192.168.50.125:8088/screenclouds"
  #mergeclouds = "http://192.168.0.249:8080/vehsy-pb/product/search/sku"
  #screenclouds = "http://192.168.0.249:8080/vehsy-pb/product/search/catattr"
  # mergeclouds = "http://pb-test.ehsy.com/product/search/sku"
  # screenclouds = "http://pb-test.ehsy.com/product/search/catattr"
  #mergeclouds = "http://192.168.4.82:8081/vehsy-pb/product/search/sku"
  # screenclouds = "http://192.168.4.82:8081/vehsy-pb/product/search/catattr"

  # staging
  #mergeclouds = "http://10.132.15.55:8081/pb-staging/product/search/sku"
  #screenclouds = "http://10.132.15.55:8081/pb-staging/product/search/catattr"

  # product
  #mergeclouds = "http://10.132.15.55:8081/pb-prod/product/search/sku"
  #screenclouds = "http://10.132.15.55:8081/pb-prod/product/search/catattr"

  #product online
  #mergeclouds = "http://10.132.15.55:8081/pb/product/search/sku"
  #screenclouds = "http://10.132.15.55:8081/pb/product/search/catattr"

  #test
  #mergeclouds = "http://10.132.15.55:8081/pb-test/product/search/sku"
  #screenclouds = "http://10.132.15.55:8081/pb-test/product/search/catattr"

  #mergeclouds = "http://pb.ehsy.com/product/search/sku"
  mergeclouds = ${config_url_mergeclouds}
  #screenclouds = "http://pb.ehsy.com/product/search/catattr"
  screenclouds = ${config_url_screenclouds}

  # mergeclouds = "http://pb-test.ehsy.com/product/search/sku"
  #screenclouds = "http://pb-test.ehsy.com/pb-test/product/search/catattr"

}

#threads number
consumer {
  threads {
    #number = 7  #if set ,get this else use core.threads.number * cores
    number = ${config_consumer_threads_number}
  }
  core {
    threads {
      #number = 2
      number = ${config_consumer_core_threads_number}
    }
  }
}

threads {
  wait {
    # number = 3000   #data in wait queue
    number = ${config_threads_wait_number}
  }
  #sleep = 5000  #unit ms   if data in wait queue > number ,need sleep 2000 ms
  sleep = ${config_threads_sleep}
}

#pageSize = 60
pageSize = ${config_pageSize}


#recommend

service {
  # host = "recommend_rest"
  host = ${config_service_host}
  #host = "192.168.3.107"
  #host = "192.168.4.58"
  #host = "10.162.64.52"
  #port = 8088
  port = ${config_service_port}
}
recommend {
  #open = true
  open = ${config_recommend_open}
}
